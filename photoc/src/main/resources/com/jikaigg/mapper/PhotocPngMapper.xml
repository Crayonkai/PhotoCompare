<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jikaigg.mapper.PhotocPngMapper">
  <resultMap id="BaseResultMap" type="com.jikaigg.domain.PhotocPng">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="ppath" jdbcType="VARCHAR" property="ppath" />
    <result column="photo_md5" jdbcType="VARCHAR" property="photoMd5" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="undefind_fields" jdbcType="VARCHAR" property="undefindFields" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="expected_file_name_extension" jdbcType="VARCHAR" property="expectedFileNameExtension" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pid, ppath, photo_md5, create_time, update_time, undefind_fields, file_name, 
    expected_file_name_extension
  </sql>
  <select id="selectByExample" parameterType="com.jikaigg.domain.PhotocPngExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from photoc_png
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from photoc_png
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from photoc_png
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jikaigg.domain.PhotocPngExample">
    delete from photoc_png
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jikaigg.domain.PhotocPng">
    insert into photoc_png (id, pid, ppath, 
      photo_md5, create_time, update_time, 
      undefind_fields, file_name, expected_file_name_extension
      )
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=VARCHAR}, #{ppath,jdbcType=VARCHAR}, 
      #{photoMd5,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{undefindFields,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{expectedFileNameExtension,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jikaigg.domain.PhotocPng">
    insert into photoc_png
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="ppath != null">
        ppath,
      </if>
      <if test="photoMd5 != null">
        photo_md5,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="undefindFields != null">
        undefind_fields,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="expectedFileNameExtension != null">
        expected_file_name_extension,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="ppath != null">
        #{ppath,jdbcType=VARCHAR},
      </if>
      <if test="photoMd5 != null">
        #{photoMd5,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="undefindFields != null">
        #{undefindFields,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="expectedFileNameExtension != null">
        #{expectedFileNameExtension,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jikaigg.domain.PhotocPngExample" resultType="java.lang.Long">
    select count(*) from photoc_png
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update photoc_png
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.pid != null">
        pid = #{row.pid,jdbcType=VARCHAR},
      </if>
      <if test="row.ppath != null">
        ppath = #{row.ppath,jdbcType=VARCHAR},
      </if>
      <if test="row.photoMd5 != null">
        photo_md5 = #{row.photoMd5,jdbcType=VARCHAR},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.undefindFields != null">
        undefind_fields = #{row.undefindFields,jdbcType=VARCHAR},
      </if>
      <if test="row.fileName != null">
        file_name = #{row.fileName,jdbcType=VARCHAR},
      </if>
      <if test="row.expectedFileNameExtension != null">
        expected_file_name_extension = #{row.expectedFileNameExtension,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update photoc_png
    set id = #{row.id,jdbcType=INTEGER},
      pid = #{row.pid,jdbcType=VARCHAR},
      ppath = #{row.ppath,jdbcType=VARCHAR},
      photo_md5 = #{row.photoMd5,jdbcType=VARCHAR},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      undefind_fields = #{row.undefindFields,jdbcType=VARCHAR},
      file_name = #{row.fileName,jdbcType=VARCHAR},
      expected_file_name_extension = #{row.expectedFileNameExtension,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jikaigg.domain.PhotocPng">
    update photoc_png
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="ppath != null">
        ppath = #{ppath,jdbcType=VARCHAR},
      </if>
      <if test="photoMd5 != null">
        photo_md5 = #{photoMd5,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="undefindFields != null">
        undefind_fields = #{undefindFields,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="expectedFileNameExtension != null">
        expected_file_name_extension = #{expectedFileNameExtension,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jikaigg.domain.PhotocPng">
    update photoc_png
    set pid = #{pid,jdbcType=VARCHAR},
      ppath = #{ppath,jdbcType=VARCHAR},
      photo_md5 = #{photoMd5,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      undefind_fields = #{undefindFields,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      expected_file_name_extension = #{expectedFileNameExtension,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>